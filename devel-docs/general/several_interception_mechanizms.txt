Обобщение KEDR'а на использование различных механизмов перехвата вызовов функций.

1. Разграничение функциональности KEDR, которая не зависит от механизма перехвата вызовов функций
и реализации непосредственно механизма перехвата.
1)Функциональность KEDR включает всю работу с payload'ами (регистрацию/дерегистрацию, фиксирование в момент загрузки целевого модуля,
вызов функций обратного вызова при загрузке/выгрузке целевого модуля), что делается сейчас в kedr_base.
Также функциональность KEDR должна включать автоматическое объединение нескольких замещающих функций для одной исходной функции
(см. multiple_interception.txt).

2) В идеале, функция реализующая перехват вызовов функций целевого модуля должна получать на вход отображение адресов исходных функций
на адреса заменяющих(это может быть как единственная функция, заменяющая исходную функцию, так и первая функция в цепочке заменяющих,
или функция-переходник).

2. Ситуация с разграничением становится сложнее, когда появляются функции-переходники, код которых надо генерировать для каждой исходной функции.
Эти переходники могут понадобится для реализации механизма перехвата: чтобы реализовать механизм перехвата на основе
изменения объектного файла целевого модуля, заменяющая функция должна иметь экспортное имя, а требовать такое имя от payload'ов не очень хорошо.
Или функции-переходники могут понадобится для автоматического объединения функций-перехватчиков.

Проблема в том, что хоть и функции-переходники могут быть сгенерированы по шаблонам на основе списка исходных функций,
которые надо уметь перехватывать, такие списки не могут быть зафиксированы:
абсолютно все функции ядра Linux учесть невозможно, так как их тысячи, а ограничивать возможности перехвата только заранее
определенным списком функций нехорошо.
Вследствие динамического списка функций для перехвата, их реализация не может быть учтена в постоянном модуле KEDR'а, а должна "подключатся"
через загрузку внешнего к KEDR'у модуля.

Получаем следующие разбиение на компоненты:

kedr_base (+) interception_mechanizm + interception_functions

где (+) означает, что эти компоненты могут быть объеденены в один модуль.

Однако, сгенерированные функции-перехватчики могут решать как задачи функциональности KEDR - автоматическое объединение замещающих функций,
так и задачи механизма перехвата вызовов - иметь экспортное имя.

3. Желательно, чтобы вне зависимости от механизма перехвата вызовов функций, все модули KEDR'а и payload'ы загружались по общим принципам.
Например:
Загрузка модулей KEDR'а (в т.ч. сгенерированные функции-перехватчики), затем загрузка payload'ов, затем, при загрузке целевого модуля,
payload'ы фиксируются автоматически.