Система автоматической сборки и проверки KEDR.
=======================================================================
Система полезна, в частности, для выполнения ночных сборок и запусков и 
т.п. на виртуальных машинах.

Управление системой производится с отдельной машины (host). Собственно 
сборка и проверка KEDR выполняется на одной или более целевых (target) 
машинах.

Обычно target-машины - виртуальные машины (VirtualBox), объединённые в 
VirtualBox host-only network. 

Host, - как правило, обычная машина, на которой как раз установлен 
VirtualBox и зарегистрированы виртуальные target-машины.

[NB] Host может быть и одной из виртуальных машин, подключенных к 
VirtualBox host-only network. В таком случае автоматический запуск и 
выключение target-машин в build.conf надо отключить (указать пустую строку 
в качетсве значения для 'manage_vm' в build.conf или вообще этот параметр 
там не определять). Запускать и выключать необходимые target-машины в таком 
случае придётся вручную.

Настройки системы - в файле build.conf. Описание этих настроек - там же, в 
комментариях.

Список target-машин нужно задать в файле machines.list (см. пример). Для 
каждой машины указывается имя и IP адрес. Если target - виртуальная машина 
и автоматический запуск и выключение target-машин включен (в build.conf), 
имя этой target-машины должно быть как раз тем, под которым она 
зарегистрирована в VirtualBox.

Запуск системы автоматической сборки и проверки KEDR: ./build.sh
Результаты (summary, лог операций host-машины, логи с target-машин) система 
сохранит в архиве results-<дата>.tar.bz2.

Если в build.conf параметр 'email_logs' имеет непустое значение, архив с 
результатами будет отправлен по email на адреса, указанные в файле 
subscribers.list (детали см. ниже). Делается это с помощью системы 
bs_mailer, которую предварительно надо собрать и установить 
(cmake <путь> - make - make install). Исходный код системы - в подкаталоге 
bs_mailer.

На каждой target-машине работа выполняется в специально созданном каталоге: 
/tmp/kedr-<версия>.build. Туда загружается архив с исходниками KEDR 
(создаётся по содержимому репозитория, указанного в параметре 'repo_main' в 
build.conf) и скрипт target.sh.

Скрипт target.sh берётся из репозитория, указанного в параметре 'repo_aux' 
в build.conf. Путь к скрипту относительно корневого каталога репозитория 
задаётся там же в параметре 'exec_script'.

target.sh принимает на вход имя source пакета (без .tar.bz2), с которым ему 
нужно отработать. Сообщения о сборке, установке и проверке KEDR выводятся в 
основной log-файл - build.log. Можно помимо этого и другие log-файлы 
создавать. Все *.log файлы host-машина скопирует себе, они попадут и в 
архив с результатами.
=======================================================================

Требования к host-машине:
- Операционная система: Linux (Windows + MSYS или Cygwin - не пойдёт).
- Установленный Mercurial ('hg' должен быть в PATH).
- build.sh, build.conf, machines.list, - собственно, система автоматической 
сборки и проверки KEDR и файлы с её настройками.

Если нужны автоматический запуск и выключение target-машин, то на 
host-машине нужно следующее:
- VirtualBox 3.1.8 или новее (VBoxManage и VBoxHeadless должны быть в PATH).

Если нужна отправка результатов по email (параметр 'email_logs' в 
build.conf имеет непустое значение), на host-машине ещё нужно следующее:
- Библиотека VMime (www.vmime.org), лучше брать версию из SVN. 
Устанавливать её рекомендуется с префиксом /usr/local.
- Программа BS Mailer (Build System Mailer). Исходники - в подкаталоге 
bs_mailer (система сборки - на базе CMake). Нужно собрать это приложение и 
установить. 'bs_mailer' должен быть в PATH.
=======================================================================

Требования к target-машине:
- операционная система: Linux (само собой)
- наличие пользователя с именем и паролем, указанными в build.conf - под 
этим user account по SSH host-машина будет выполнять всё необходимое на 
данной target-машине.
- доступ по SSH на target-машину должен быть возможен, т.е. все необх. для 
SSH пакеты должны быть установлены, служба sshd должна быть запущена, в 
Firewall (если есть) должно быть соотв. разрешение и т.д.
- всё необходимое для сборки и проверки KEDR: cmake, kernel headers, 
компиляторы GCC и G++ и т.д.
=======================================================================

Выполнение тестов для KEDR

На target-машинах посли сборки KEDR автоматически выполняется 'make check'.
При этом запускаются все тесты, которые есть в пакете с KEDR.

В build.log при этом будет выведена информация о тестах: какие тесты 
запускались и с каким результатом завершились. Подробная информация о 
тестах (в т.ч. сообщения, выданные ими) - в других log-файлах.

Если для каких-то из тестов допустимо, что они могут выдать FAIL (например, 
если это тесты для функциональности, которая ещё не реализована), стоит 
перечислить имена этих тестов в файле may_fail.list. Такие тесты будут 
отмечены как FAILED всё равно, но система сборки не будет их учитывать.

may_fail.list ищется в текущем каталоге на момент запуска build.sh.
Если этого файла нет, считается, что allowed failures нет.

[WARNING]
Пустых строк в may_fail.list быть не должно: пустая строка - подстрока 
для любой строки, так что любое failure будет считаться known в таком
случае.
=======================================================================

Отправка результатов по email.

Если параметр 'email_logs' в build.conf имеет непустое значение, build 
system отправит архив с результатами "подписчикам".

Настройки - в файле bs_mailer.conf.in (.in, т.к. из него build.sh 
автоматически сделает bs_mailer.conf, заменив всё, что там в @...@, на 
соотв. значения).

Пояснения - в комментариях к пареметрам в bs_mailer.conf.in.
Имя файла, где перечислены email подписчиков - subscribers.list, по 
умолчанию. При желании, можно поменять, указав нужный путь в параметре 
'subscribersFile' в bs_mailer.conf.in.

В subscribers.list каждый email указывается на отдельной строке. Пустые 
строки и #-комментарии игнорируются.
=======================================================================
