coverage_tool - utility for manipulation with coverage traces, produced
by lcov.

5 mods are implemented:

- add
    Sum corresponded counters from traces

- diff
    Substract counters from the second trace from corresponded ones in
    the first trace. If counter became negative, it is set to 0.

- new-coverage
    Reset all positive counters in the first trace, that are also
    positive in the second one. That is, only those lines
    (branches, functions) remain covered in the first trace,
    which are not covered in the second one.

- stat
    Print information about trace. By default, percentage and absolute
    data about lines, functions and branches coverage is printed.
    User can override format for output data.

- optimize-tests
    Take traces with 'weights'.
    Form set of that traces, which cover maximum number of lines, but has
    minimum total weight.

                        BUILD
Build is implemented using cmake utility:

# cd <build-dir>
# cmake <sources-dir>
# make

For successfull build, next programs should be installed:

- lex (flex)
- bison (yacc)


After building, 'coverage_tool' utility appears under <build-dir>.

                        USING

All modes supports option

    -o filename

which, if given, redirect output to given file.


    coverage_tool add [options] trace1 trace2 ... 

sum all given traces,
    

    coverage_tool diff [options] trace trace_sub

substract counters of 'trace_sub' from 'trace',


    coverage_tool new-coverage [options] trace trace_prev

perform corresponded operation on counters of 'trace' and 'trace_prev'.


    coverage_tool stat [options] trace

Print information about trace, such as coverage of lines, functions and branches.
If option

    -f format

if specified, 'format' is used as format of output. Format directives are
described in help.


    coverage_tool optimize-tests [options] <tests-file>

Assume <tests-file> to contain lines in format

    <weight> <trace-file>

where weight is floating-point number, characterized trace in <trace-file>.

Output is a list of trace files, which:
1) contain only trace files described in <tests-file>.
1) cover same lines as all trace files from <tests-file>.
2) has minimum total weight.
