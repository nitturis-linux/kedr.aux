Пример организации сборки пакета/подпакета, распространяющего kernel module, с инструментарием CMake.
Реализовано:

1. Компиляция kernel module в рамках обычного CMake проекта.
2. Предварительная проверка на этапе конфигурации пакета, что текущая конфигурация системы поддерживает компиляцию kernel module - установлены заголовочные файлы ядра, текущий компилятор может использоватся для компиляции kernel module. Это выполняется путем проверки возможности скомпилировать (простой) kernel module.
3. Предварительная проверка на этапе конфигурации, что данное ядро поддерживает все "фичи", которые могут использоватся модулями. Для этого определяется минимальная версия ядра, которая поддерживает все что надо, и проверяется, что версия ядра, на котором выпоняется конфигурирование, не меньше необходимой. Последняя проверка выполняется путем компилирования файла, в котором на этапе макропроцессора генерируется ошибка, если версия ядра меньше заданной минимальной.
4. Реализована функция kmodule_try_compile, которая по аналогии с стандартной try_compile пробует скомпилировать указанный source file. Однако в отличие от try_compile, kmodule_try_compile пробует скомпилировать указанный файл в kernel module.
Эта функция может пригодится для более тщательной проверки возможностей ядра, помимо версии.