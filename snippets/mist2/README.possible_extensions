Список того, чего еще нет, но можно реализовать.

1. Указывать название главного шаблона(по умолчанию 'document' ).

Полезно для переиспользования вспомогательных шаблонов, когда по одним
и тем же данным надо сгенерировать несколько разных представлений
(например, заголовочный файл с экспортируемыми функциями, и файл с их
реализацией).

2. Указывать несколько data-файлов, содержимое которых должно быть
обработано последовательно.

Полезно в случае склейки data-файла из кусочков: с такой возможностью
не обязательно создавать промежуточный data-файл.

Implementation notes: С несколькими источниками данных возможны
проблемы с выводом корректных номеров строк в случае ошибок. Дело в том,
что библиотека yaml-cpp работает только с одним потоком, и выдает номера
строк в нем.

3. Вместо data-файла читать YAML представление данных из stdin.

Полезно в случае каскадного генерирования, когда результат одной
генерации используется в другой: с такой возможностью
не обязательно создавать промежуточный data-файл.

4. В дополнение к data-файлу(списку data-файлов) использовать
непосредственный строковый параметр, содержимое которого будет будет
обработано последовательно с остальными.

Полезно, когда два представления опираются на "почти" одинаковый формат
данных и отличаются "чуть-чуть": с такой возможностью можно использовать
одни и теже шаблоны, только в одном случае к содержимому data-файла
будет добавлен один параметр-флаг.

5. Выводить результат не в stdout, а в файл.

В отличие от перенаправления в файл, можно реализовать автоматическое
удаление файла в случае ошибки разбора шаблонов/data-файлов или при
ошибке генерации("Main template is multivalued.").

Это было бы полезно при автоматической сборке с использованием make:
Сейчас(с использованием перенаправления) в случае ошибки в генерации
создается пустой файл, который не пересобирается при последующем запуске
make.

Примерная реализация вышеперечисленных опций:

mist-yaml template-directory [OPTIONS] [--] [SRC...]

OPTIONS:

-m | --main <template-name>

-o <outfile>

SRC:

<filename>
    Источник данных - файл <filename>
-f <filename>
    Источник данных - файл <filename>. Полезно, если имя файла начинается на "-"
-s <string>
    Источник данных - строка.
-
    Источник данных - stdin.

Если ни один источник не указан, используется stdin.

После "--" все параметры интерпритируются как имена файлов(а не опции).