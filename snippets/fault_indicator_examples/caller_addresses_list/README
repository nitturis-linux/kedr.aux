Индикатор, позволяющий извлекать адреса, с которых вызывалась целевая функция в ходе некоторого сценария(теста).
При следующем запуске сценария(теста) можно фейлить только вызовы функции с определенного адреса.

Индикатор является расширением стандартного индикатора KEDR.

При установке индикатора для точки, помимо файлов, соответствующих стандартному индикатору, доступны следующие:

- caller_addresses_list
  Чтение из этого файла возвращает список адресов, с которых вызывалась целевая функция.
  Каждый адрес выводится с новой строки в формате 0x%lx.
  Учитываются только те вызовы, которые удовлетворяют ограничению по 'pid'(если оно используется).
  Запись в файл опустошает список.

  При установке индикатора список пустой.

- caller_addresses_detector
  Запись ненулевого числового значения включает ведение списка адресов возврата(caller_addresses_list). Запись нулевого значения останавливает ведение списка.
  Чтение возвращает 1, если список адресов возврата ведется, и 0, если ведение списка остановлено.

  При установке индикатора ведение списка адресов выключено(!).

- caller_address
  Ограничивает возможную эмуляцию фейлов только теми вызовами функции, которые выполнены с соответствующего адреса.
  Ограничение работает по принципам, сходным с ограничением по pid, то есть счетчик 'times' увеличивается только при вызовах функции с этого адреса.
  Но на список caller_addresses_list это ограничение не влияет(иначе ведение списка при ограничении было бы бессмысленным).

  Запись ненулевого адреса в файл устанавливает ограничение, запись нулевого значения отменяет ограничение.
  Формат числа: 0x%lx или %lx.
  Чтение из файла возвращает адрес текущего ограничения или 0.
  Формат числа: 0x%lx.

  При установке индикатора ограничение не установлено.


                    Сборка

Сборка выполняется с помощью 
    
    make

Если KEDR установлен не в /usr/local (по-умолчанию), то в файлах
makefile и Kbuild необходимо поменять значение переменной KEDR_INSTALL_PREFIX.

Файл indicator.data может быть изменен в соответствии с форматом data-файлов для индикаторов.
В таком случае получившийся модуль будет включать все особенности, описанные в indicator.data.