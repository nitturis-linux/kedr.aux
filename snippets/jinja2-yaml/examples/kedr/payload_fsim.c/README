Пример шаблонов для генерации 'payload_fsim.c' в KEDR
Также приведен пример yaml-файла с данными для такой генерации.


                    Использование

jinja2-yaml payload.yaml templates/


                    Примечания

1. Для итерации по точкам симуляции используется цикл 'for' по функциям,
но с фильтрацией тех функций, для который определено поле fpoint.reuse_point.

2. При дерегистрации точек симуляции в module_exit используется обратный
порядок функций(фильтр reverse).
Обратный порядок функций используется также в module_init для
дерегистрации точек в случае ошибок. При этом внутри этой итерации
используется схема кода

    unregister(point_{{name}});
label_{{name}}:

которая вместе со схемой кода (прямой) итерациии при регистрации точек

    if(register(init(point_{{name}})))
    {
        goto label_{{name}};
    }

дает корректную обработку ошибок без использования массивов объектов.

3. См. также README для шаблонов "functions_support.c".